package com.example.demo;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicLong;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Profile;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;


private static final Logger log=LoggerFactory.getLogger(Testapp13Application.class);

@RestController 
@SpringBootApplication 
public class MyNoteAppApplication {
	@Autowired
	private DatabaseConnector databaseConnector;

	public static void main(String[] args) {
		SpringApplication.run(MyNoteAppApplication.class, args);
	}

	@GetMapping("/hello")

	@CrossOrigin

	public String hello@RequestParam(value = "name", defaultValue = "World") String name)
	{

		return String.format("Hello %s!", name);

	}

	@Bean

	public CommandLineRunner commandLineRunner(ApplicationContext ctx) {

		return args -> {

			System.out.println("Let's inspect the beans provided by Spring Boot:");

			String[] beanNames = ctx.getBeanDefinitionNames();

			Arrays.sort(beanNames);

			for (String beanName : beanNames) {

				System.out.println(beanName);

			}

		};

	}

	@GetMapping("/")
	@CrossOrigin
	public String index() {

		String reply = "Greetings from Spring Boot!";

		try (Connection connection = DatabaseConnector.getConnection()) {

			String query = "SELECT * FROM users";

			try (PreparedStatement statement = connection.prepareStatement(query)) {

				try (ResultSet resultSet = statement.executeQuery()) {

					while (resultSet.next()) {

						reply = resultSet.getString("username");

						System.out.println("Username: " + reply);

					}

				}

			}

		} catch (SQLException e) {

			e.printStackTrace();

		}

		return reply;

	}

	@PostMapping("/add-user")

	@CrossOrigin

	public ResponseEntity<String> addUser@RequestBody User user)
	{

		try (Connection connection = DatabaseConnector.getConnection()) {

			String query = "INSERT INTO users(user_id, username, password_hash, created_at, updated_at) VALUES (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";

			try (PreparedStatement statement = connection.prepareStatement(query)) {

				System.out.println(user.getUserId());

				statement.setString(1, user.getUserId());

				statement.setString(2, user.getUsername());

				statement.setString(3, user.getPasswordHash());

				statement.executeUpdate();

			}

			return ResponseEntity.status(HttpStatus.CREATED).body("User added successfully.");

		} catch (SQLException e) {

			e.printStackTrace();

			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to add user.");

		}

	}

	private static final String template = "Hello, %s!";

	private final AtomicLong counter = new AtomicLong();

	@GetMapping("/greeting")

	@CrossOrigin

	public Greeting greeting@RequestParam(value = "name", defaultValue = "World") String name)
	{

		return new Greeting(counter.incrementAndGet(), String.format(template, name));

	}

	@Bean

	public RestTemplate restTemplate(RestTemplateBuilder builder) {

		return builder.build();

	}

	@Bean

	@Profile("!test")

	public CommandLineRunner run(RestTemplate restTemplate) throws Exception {

		return args -> {

			//				Quote quote = restTemplate.getForObject(

			//						"http://localhost:8080/api/random", Quote.class);

			//				log.info(quote.toString());

		};

	}

}
