package com.example.demo.pageDomein.entity;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.example.demo.DatabaseConnector;
import com.example.demo.pageDomain.PageModel;

import lombok.Getter;
import lombok.Setter;

public class Frame {

	@Getter
	@Setter
	private String frameId;
	@Getter
	@Setter
	private String baseFrameFlg;
	@Getter
	@Setter
	private String frameType;
	@Getter
	@Setter
	private String titleContentId;
	@Getter
	@Setter
	private Date createdDate;
	@Getter
	@Setter
	private Date updatedDate;
	
	@Autowired
	private DatabaseConnector databaseConnector;
	
	public Frame() {
	}

	public Frame(String frameId, String baseFrameFlg, String frameType, String titleContentId,
			Date createdDate, Date updatedDate) {
		this.frameId = frameId;
		this.baseFrameFlg = baseFrameFlg;
		this.frameType = frameType;
		this.titleContentId = titleContentId;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	public List<String> col = List.of(
			"frame_id",
			"base_flame_flg",
			"frame_type",
			"title_content_id",
			"created_date",
			"updated_date");
	
	public Frame setResultSet(ResultSet r) throws SQLException {
			this.setFrameId(r.getString("frame_id"));
			this.setBaseFrameFlg(r.getString("base_flame_flg"));
			this.setFrameType(r.getString("frame_type"));
			this.setTitleContentId(r.getString("title_content_id"));
			this.setCreatedDate(r.getDate("created_date"));
			this.setUpdatedDate(r.getDate("updated_date"));
		return this;
	}
	public List<String> getChildContentIds(){
		
	}
	public List<String> getChildFrameIds(){
		List<String> childIds = new List<String>();
		
		try (Connection connection = databaseConnector.getConnection()) {
			String query = "SELECT * FROM t_frame where frame_id = " + baseFrameId + "";
			try (PreparedStatement statement = connection.prepareStatement(query)) {
				try (ResultSet r = statement.executeQuery()) {
					while (r.next()) {
						Frame frame = new Frame();
						this.page.setBaseFrame(frame.setResultSet(r));
					}
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return this.page;
	}
}
